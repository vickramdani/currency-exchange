{"version":3,"sources":["component/Header.js","component/InputCurrency.js","component/CurrencyList.js","component/CurrencyOption.js","App.js","index.js"],"names":["Header","className","InputCurrency","onChangeAmount","amount","type","value","onChange","maxLength","CurrencyList","selectedCurr","removeCurrency","map","currencies","currency","label","rates","toLocaleString","onClick","icon","faTrash","options","CurrencyOption","handleChange","placeholder","find","obj","App","useState","setSelectedCurr","setAmount","toCurrency","setToCurrency","useEffect","fetchExchangeRates","a","fetch","response","json","data","exchange","Object","values","curr","undefined","e","target","filter","item","arr","key","reduce","remove","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAUeA,MARf,WACE,OACE,8BACE,oBAAIC,UAAU,SAAd,kCCaSC,MAhBf,YAAoD,IAA3BC,EAA0B,EAA1BA,eAAgBC,EAAU,EAAVA,OACvC,OACE,sBAAKH,UAAU,eAAf,UACE,uBACEA,UAAU,QACVI,KAAK,OACLC,MAAOF,EACPG,SAAUJ,EACVK,UAAW,KAEb,mBAAGP,UAAU,qBAAb,yCACA,oBAAIA,UAAU,gBAAd,qB,gBCuBSQ,MAhCf,YAAiE,IAAzCC,EAAwC,EAAxCA,aAAcN,EAA0B,EAA1BA,OAAQO,EAAkB,EAAlBA,eAC5C,OACE,qBAAKV,UAAU,YAAf,SACGS,EAAaE,KAAI,SAACC,GAAD,OAChB,sBAAKZ,UAAU,YAAf,UACE,gCACE,mBAAGA,UAAU,cAAb,SAA4BY,EAAWC,WACvC,oBAAGb,UAAU,aAAb,UACGY,EAAWC,SADd,MAC2BD,EAAWE,SAEtC,oBAAGd,UAAU,aAAb,sBAC+B,EAAnBY,EAAWG,OAAWC,iBAAkB,IACjDJ,EAAWC,YAEd,mBAAGb,UAAU,cAAb,UACIY,EAAWG,MAAQZ,GAAQa,sBAGjC,8BACE,wBACEhB,UAAU,aACViB,QAAS,kBAAMP,EAAeE,EAAWC,WAF3C,SAIE,cAAC,IAAD,CAAiBK,KAAMC,YAnBGP,EAAWC,gB,QCL7CO,EAAU,CACd,CAAEf,MAAO,MAAOS,MAAO,mBACvB,CAAET,MAAO,MAAOS,MAAO,iBACvB,CAAET,MAAO,MAAOS,MAAO,qBACvB,CAAET,MAAO,MAAOS,MAAO,0BACvB,CAAET,MAAO,MAAOS,MAAO,eACvB,CAAET,MAAO,MAAOS,MAAO,oBACvB,CAAET,MAAO,MAAOS,MAAO,gBACvB,CAAET,MAAO,MAAOS,MAAO,qBACvB,CAAET,MAAO,MAAOS,MAAO,gBACvB,CAAET,MAAO,MAAOS,MAAO,qBAgBVO,MAbf,YAAyD,IAA/BZ,EAA8B,EAA9BA,aAAca,EAAgB,EAAhBA,aACtC,OACE,qBAAKtB,UAAU,SAAf,SACE,cAAC,IAAD,CACEuB,YAAY,kBACZH,QAASA,EACTf,MAAOe,EAAQI,MAAK,SAAAC,GAAG,OAAIA,EAAIpB,QAAUI,KACzCH,SAAUgB,O,MCoDHI,MAhEf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNlB,EADM,KACQmB,EADR,OAEeD,mBAAS,IAFxB,mBAENxB,EAFM,KAEE0B,EAFF,OAGuBF,qBAHvB,mBAGNG,EAHM,KAGMC,EAHN,KAKbC,qBAAU,WACU,MAAdF,GACFG,MAED,CAACH,IAEJ,IAAMG,EAAkB,uCAAG,gCAAAC,EAAA,sEACFC,MAAM,GAAD,OAdf,kDAce,oBAAwBL,IAD3B,cACnBM,EADmB,gBAENA,EAASC,OAFH,OAEnBC,EAFmB,OAInBC,EAAW,CAAExB,MAAOyB,OAAOC,OAAOH,EAAKvB,QAC7Ca,EACEnB,EAAaE,KAAI,SAAA+B,GACf,YAAmBC,IAAfD,EAAK3B,MACA,2BAAK2B,GAASH,GAEdG,MAVY,2CAAH,qDAuCxB,OACE,sBAAK1C,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAeE,eAfY,SAAA0C,GAC7Bf,EAAUe,EAAEC,OAAOxC,QAcsCF,OAAQA,IAC/D,cAAC,EAAD,CACEA,OAAQA,EACRM,aAAcA,EACdC,eA9BiB,SAAAgC,GACrBd,EAAgBnB,EAAaqC,QAAO,SAAAC,GAAI,OAAIA,EAAKlC,WAAa6B,SA+B5D,cAAC,EAAD,CAAgBjC,aAAcA,EAAca,aAjB3B,SAAAsB,GAXG,IAACI,EAAKC,EAY5BrB,GAZuBoB,EAYS,GAAD,mBAAMvC,GAAN,CAAoB,CAAEI,SAAU+B,EAAEvC,MAAOS,MAAO8B,EAAE9B,SAZrDmC,EAYgE,WAXrFD,EAAIE,QAAO,SAACF,EAAKD,GACtB,IAAMI,EAASH,EAAIF,QAAO,SAAAM,GAAC,OAAIA,EAAEH,KAASF,EAAKE,MAC/C,MAAM,GAAN,mBAAWE,GAAX,CAAmBJ,MAClB,MASHhB,EAAca,EAAEvC,cClDpBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c4eab525.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"header\">Currency Exchange</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction InputCurrency({ onChangeAmount, amount }) {\r\n  return (\r\n    <div className=\"input-number\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={amount}\r\n        onChange={onChangeAmount}\r\n        maxLength={11}\r\n      />\r\n      <p className=\"base-currency-full\">USD - United States Dollars</p>\r\n      <h2 className=\"base-currency\">USD</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputCurrency;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CurrencyList({ selectedCurr, amount, removeCurrency }) {\r\n  return (\r\n    <div className=\"container\">\r\n      {selectedCurr.map((currencies) => (\r\n        <div className=\"curr-list\" key={currencies.currency}>\r\n          <div>\r\n            <p className=\"curr-symbol\">{currencies.currency}</p>\r\n            <p className=\"curr-label\">\r\n              {currencies.currency} - {currencies.label}\r\n            </p>\r\n            <p className=\"curr-rates\">\r\n              1 USD = {(currencies.rates * 1).toLocaleString()}{\" \"}\r\n              {currencies.currency}\r\n            </p>\r\n            <p className=\"curr-amount\">\r\n              {(currencies.rates * amount).toLocaleString()}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"delete-btn\"\r\n              onClick={() => removeCurrency(currencies.currency)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyList;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n  { value: \"CAD\", label: \"Canadian Dollar\" },\r\n  { value: \"EUR\", label: \"European Euro\" },\r\n  { value: \"IDR\", label: \"Indonesian Rupiah\" },\r\n  { value: \"GBP\", label: \"Britain Pound sterling\" },\r\n  { value: \"CHF\", label: \"Swiss Franc\" },\r\n  { value: \"SGD\", label: \"Singapore Dollar\" },\r\n  { value: \"INR\", label: \"Indian Rupee\" },\r\n  { value: \"MYR\", label: \"Malaysian Ringgit\" },\r\n  { value: \"JPY\", label: \"Japanese Yen\" },\r\n  { value: \"KRW\", label: \"South Korean Won\" }\r\n];\r\n\r\nfunction CurrencyOption({ selectedCurr, handleChange }) {\r\n  return (\r\n    <div className=\"option\">\r\n      <Select\r\n        placeholder=\"Select Currency\"\r\n        options={options}\r\n        value={options.find(obj => obj.value === selectedCurr)}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyOption;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Header from \"./component/Header\";\r\nimport InputCurrency from \"./component/InputCurrency\";\r\nimport CurrencyList from \"./component/CurrencyList\";\r\nimport CurrencyOption from \"./component/CurrencyOption\";\r\nimport \"./App.css\";\r\n\r\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest?base=USD\";\r\n\r\nfunction App() {\r\n  const [selectedCurr, setSelectedCurr] = useState([]);\r\n  const [amount, setAmount] = useState(10);\r\n  const [toCurrency, setToCurrency] = useState();\r\n\r\n  useEffect(() => {\r\n    if (toCurrency != null) {\r\n      fetchExchangeRates();\r\n    }\r\n  }, [toCurrency]);\r\n\r\n  const fetchExchangeRates = async () => {\r\n    const response = await fetch(`${BASE_URL}&symbols=${toCurrency}`);\r\n    const data = await response.json();\r\n\r\n    const exchange = { rates: Object.values(data.rates) };\r\n    setSelectedCurr(\r\n      selectedCurr.map(curr => {\r\n        if (curr.rates === undefined) {\r\n          return { ...curr, ...exchange };\r\n        } else {\r\n          return curr;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeCurrency = curr => {\r\n    setSelectedCurr(selectedCurr.filter(item => item.currency !== curr));\r\n  };\r\n\r\n  const removeDuplicate = (arr, key) => {\r\n    return arr.reduce((arr, item) => {\r\n      const remove = arr.filter(i => i[key] !== item[key]);\r\n      return [...remove, item];\r\n    }, []);\r\n  }\r\n\r\n  const handleFromAmountChange = e => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setSelectedCurr(removeDuplicate(([...selectedCurr, { currency: e.value, label: e.label }]), \"currency\"));\r\n    setToCurrency(e.value);\r\n    // removeDuplicate(selectedCurr, \"currency\")\r\n  };\r\n  // console.log(removeDuplicate(selectedCurr, \"currency\"));\r\n\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <Header />\r\n      <InputCurrency onChangeAmount={handleFromAmountChange} amount={amount} />\r\n      <CurrencyList\r\n        amount={amount}\r\n        selectedCurr={selectedCurr}\r\n        removeCurrency={removeCurrency}\r\n      />\r\n      <CurrencyOption selectedCurr={selectedCurr} handleChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}